name: deploy-server # Workflow name

# Trigger workflow only on push to main branch
# and only if changes happen in server folder
on:
  push:
    branches:
      - master
    paths:
      - 'server/**'
jobs:
# ===== Server deployment jobs ====
  server-deploy:
    runs-on: ubuntu-latest
    env:
      RAILWAY_TOKEN: ${{ secretS.RAILWAY_PROJECT_TOKEN }}

    steps:
      # Checkout the code from GitHub
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Cache Node.js dependencies for faster builds
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('server/package-lock.json') }}
          restore-key: |
            ${{ runner.os }}-node-

      # Log in to Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Build Docker image from server folder
      # tag it with commit SHA and 'latest'
      - name: Build Docker image
        run: |
          docker build -t crawan/housori-server:${{ github.sha }} ./server
          docker tag crawan/housori-server:${{ github.sha }}  crawan/housori-server:latest

      # Push Docker images to Docker Hub
      - name: Push Docker image
        run: |
          docker push crawan/housori-server:${{ github.sha }}
          docker push crawan/housori-server:latest
      
      # Trigger Railway deploy via webhook
      # Install Railway CLI
      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          export PATH="$HOME/.railway/bin:$PATH"

      # Trigger Railway deploy (pull existing Docker image)
      - name: Deploy to Railway
        run: railway deploy --service=${{ secrets.RAILWAY_HOUSORI_SERVICE_ID }}
